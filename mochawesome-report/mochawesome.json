{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2020-08-03T17:08:16.315Z",
    "end": "2020-08-03T17:09:08.415Z",
    "duration": 52100,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ce6a5ae4-2228-4883-b673-dc8964d62132",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook",
          "fullTitle": "\"before each\" hook",
          "timedOut": false,
          "duration": 3766,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const testName = this.currentTest.fullTitle();\nthis.driver = await driverFactory.build(testName);",
          "err": {},
          "uuid": "e84f0240-d051-45c8-8ce7-152662d8a5b1",
          "parentUUID": "ce6a5ae4-2228-4883-b673-dc8964d62132",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook",
          "fullTitle": "\"after each\" hook",
          "timedOut": false,
          "duration": 1534,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "if (this.currentTest.state === 'failed') {\n    let fileName = (this.currentTest.title + '-' + new Date().getTime()).replace(/\\s+/g, '-') + '.jpg';\n    let dir = await path.join(__dirname, '..', 'mochawesome-report', 'screenshots');\n    if (!fs.existsSync(dir)) {\n        await fs.mkdirSync(dir);\n    }\n    await fs.writeFileSync(await path.join(dir, fileName), await this.driver.takeScreenshot(), 'base64');\n    await addContext(this, await path.join(__dirname, '..', 'mochawesome-report', 'screenshots', fileName));\n}\nawait driverFactory.quit();",
          "err": {},
          "uuid": "cb653e50-2a05-4ebf-93fb-5ffa1b2bcdc8",
          "parentUUID": "ce6a5ae4-2228-4883-b673-dc8964d62132",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "d9d2f868-a3b9-4932-9f0b-db4e55510d5a",
          "title": "Verify Dynamic Loading",
          "fullFile": "/Users/jc/selenium-webdriver-demo/test/DynamicLoadingTest.js",
          "file": "/test/DynamicLoadingTest.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Verify Dynamic Loading \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dynamicLoading = new DynamicLoadingPage(this.driver);",
              "err": {},
              "uuid": "99c9fd96-211d-4430-beca-a42b2c8b5ee3",
              "parentUUID": "d9d2f868-a3b9-4932-9f0b-db4e55510d5a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "hidden element",
              "fullTitle": "Verify Dynamic Loading hidden element",
              "timedOut": false,
              "duration": 7930,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await dynamicLoading.loadExample('1');\nassert(await dynamicLoading.isFinishTextPresent(), true, 'Finish text not displayed.');",
              "err": {},
              "uuid": "d6888058-3b93-4b40-95ac-209c40302f5b",
              "parentUUID": "d9d2f868-a3b9-4932-9f0b-db4e55510d5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6888058-3b93-4b40-95ac-209c40302f5b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7930,
          "root": false,
          "rootEmpty": false,
          "_timeout": 48000
        },
        {
          "uuid": "c71b874e-cdb2-48fd-b3ce-50d60a1ed2b8",
          "title": "Verify Login",
          "fullFile": "/Users/jc/selenium-webdriver-demo/test/loginTest.js",
          "file": "/test/loginTest.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Verify Login \"before each\" hook",
              "timedOut": false,
              "duration": 8065,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "login = new LoginPage(this.driver);\nawait login.load();",
              "err": {},
              "uuid": "7b77b408-0e47-4882-8fb6-a58a0ec391d0",
              "parentUUID": "c71b874e-cdb2-48fd-b3ce-50d60a1ed2b8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "with valid credentials",
              "fullTitle": "Verify Login with valid credentials",
              "timedOut": false,
              "duration": 1100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate('tomsmith', 'SuperSecretPassword!');\nassert(await login.successMessagePresent(), 'Success message not displayed');",
              "err": {},
              "uuid": "bb4d4cc5-ca67-411f-9f83-50b0153f02d3",
              "parentUUID": "c71b874e-cdb2-48fd-b3ce-50d60a1ed2b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "with invalid credentials",
              "fullTitle": "Verify Login with invalid credentials",
              "timedOut": false,
              "duration": 1002,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate('invalid', 'invalid')\nassert(await login.failureMessagePresent(), 'Failure message not displayed');",
              "err": {},
              "uuid": "c3f05f33-ec21-4901-815e-d7afd96ec1c3",
              "parentUUID": "c71b874e-cdb2-48fd-b3ce-50d60a1ed2b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "expected failure to validate screenshot",
              "fullTitle": "Verify Login expected failure to validate screenshot",
              "timedOut": false,
              "duration": 865,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"/Users/jc/selenium-webdriver-demo/mochawesome-report/screenshots/expected-failure-to-validate-screenshot-1596474546880.jpg\"",
              "code": "await login.authenticate('invalid', 'invalid')\nassert(false, 'Expected assertion failure.');",
              "err": {
                "message": "AssertionError: Expected assertion failure.",
                "estack": "AssertionError [ERR_ASSERTION]: Expected assertion failure.\n    at Context.<anonymous> (test/loginTest.js:26:9)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                "diff": "- false\n+ true\n"
              },
              "uuid": "642ed3ab-471e-4162-a7bb-42f4f0e0603a",
              "parentUUID": "c71b874e-cdb2-48fd-b3ce-50d60a1ed2b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb4d4cc5-ca67-411f-9f83-50b0153f02d3",
            "c3f05f33-ec21-4901-815e-d7afd96ec1c3"
          ],
          "failures": [
            "642ed3ab-471e-4162-a7bb-42f4f0e0603a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2967,
          "root": false,
          "rootEmpty": false,
          "_timeout": 48000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 48000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.1.0"
    }
  }
}